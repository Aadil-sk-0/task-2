import tensorflow as tf

# Load the dataset
train_ds = tf.keras.preprocessing.image_dataset_from_directory(
    'your_dataset_path',
    image_size=(128, 128),
    batch_size=32
)

# Define the model
model = tf.keras.Sequential([
    tf.keras.layers.Rescaling(1./255),
    tf.keras.layers.Conv2D(16, (3, 3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2, 2),
    tf.keras.layers.Conv2D(32, (3, 3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2, 2),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(train_ds, epochs=10)

# Predict the class of a new image
new_image = tf.keras.preprocessing.image.load_img('path/to/new/image.jpg', target_size=(128, 128))
new_image = tf.keras.preprocessing.image.img_to_array(new_image)
new_image = np.expand_dims(new_image, axis=0)
prediction = model.predict(new_image)

if prediction[0] > 0.5:
    print('The image is a dog.')
else:
    print('The image is a cat.')
